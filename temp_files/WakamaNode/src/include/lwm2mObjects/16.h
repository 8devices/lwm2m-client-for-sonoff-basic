#pragma once
// Automatically generated header file

#include "lwm2m/objects.h"
namespace KnownObjects {
namespace id16 {
// Custom, overrideable types for Opaque and String resources

    #ifndef Identity16
    class IdentityType : public PreallocString<30> {};
    #endif
    
    #ifndef AuthData16
    class AuthDataType : public Opaque<30> {};
    #endif
    

/* \brief Class for object 16 - Portfolio
 *  The Portfolio Object allows to extend the data storage capability of other Object Instances
 *  in the LwM2M system, as well as the services which may be used to authenticate and to protect
 *  privacy of data contained in those extensions. In addition, a service of data encryption
 *  is also defined
 */
class instance : public Lwm2mObjectInstance {
public:

    // 0 - Data Storage extension for other Object Instances.  e.g  for [GSMA]  : 0 : Host Device ID, 1:  Host Device Manufacturer2:  Host Device Model3:  Host Device Software Version,This Resource contains data that the GetAuthData executable Resource can work with.
    IdentityType Identity;
    
    // Optional resource
    // 1 - Executable resource to trigger Services described in Section 5.2.2 Arguments definitions are described in Section 5.2.1 as well as in table 2 of this document
    Executable GetAuthData;

    // Optional resource
    // 2 - Buffer which contains the data generated by the  process triggered by a GetAuthData request
    AuthDataType AuthData;
    
    // Optional resource
    // 3 - This Resource contains the state related to the process triggered by GetAuthData  request.0 :  IDLE_STATE :  AuthData doesn’t contain any valid data1 :  DATA_AVAIL_STATE : AuthData  contains a valid data 2 :  ERROR_STATE :  an error occurred  This state is reset to IDLE_STATE, when the executable resource “GetAuthData” is triggered or when the AuthData resource has been returned to the LwM2M Server (READ / NOTIFY) .
    int AuthStatus;
    
};

enum class RESID {
    Identity = 0,
    GetAuthData = 1,
    AuthData = 2,
    AuthStatus = 3,
    
};

/* \brief Class for object 16 - Portfolio
 *  The Portfolio Object allows to extend the data storage capability of other Object Instances
 *  in the LwM2M system, as well as the services which may be used to authenticate and to protect
 *  privacy of data contained in those extensions. In addition, a service of data encryption
 *  is also defined
 */
class object : public Lwm2mObject<16, object, instance> {
public:

    // 0 - Data Storage extension for other Object Instances.  e.g  for [GSMA]  : 0 : Host Device ID, 1:  Host Device Manufacturer2:  Host Device Model3:  Host Device Software Version,This Resource contains data that the GetAuthData executable Resource can work with.
    Resource(0, &instance::Identity, O_RES_RW) Identity;
    
    // Optional resource
    // 1 - Executable resource to trigger Services described in Section 5.2.2 Arguments definitions are described in Section 5.2.1 as well as in table 2 of this document
    Resource(1, &instance::GetAuthData) GetAuthData;
    
    // Optional resource
    // 2 - Buffer which contains the data generated by the  process triggered by a GetAuthData request
    Resource(2, &instance::AuthData, O_RES_R) AuthData;
    
    // Optional resource
    // 3 - This Resource contains the state related to the process triggered by GetAuthData  request.0 :  IDLE_STATE :  AuthData doesn’t contain any valid data1 :  DATA_AVAIL_STATE : AuthData  contains a valid data 2 :  ERROR_STATE :  an error occurred  This state is reset to IDLE_STATE, when the executable resource “GetAuthData” is triggered or when the AuthData resource has been returned to the LwM2M Server (READ / NOTIFY) .
    Resource(3, &instance::AuthStatus, O_RES_R) AuthStatus;
    
};

} // end of id namespace
} // end of KnownObjects namespace
inline bool operator== (KnownObjects::id16::RESID c1, uint16_t c2) { return (uint16_t) c1 == c2; }
inline bool operator== (uint16_t c2, KnownObjects::id16::RESID c1) { return (uint16_t) c1 == c2; }
	